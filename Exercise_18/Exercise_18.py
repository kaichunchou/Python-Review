'''
Exercise 18

Create a program that will play the “cows and bulls” game with the user. The game works like this:

Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the
user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed
correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many
“cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep
track of the number of guesses the user makes throughout teh game and tell the user at the end.

Say the number generated by the computer is 1038. An example interaction could look like this:

  Welcome to the Cows and Bulls Game! 
  Enter a number: 
  >>> 1234
  2 cows, 0 bulls
  >>> 1256
  1 cow, 1 bull
  ...
Until the user guesses the number.
'''
import string
from random import randint

def main():
    answer = generate_answer()
    count = 0
    while True:
        user_input = get_four_digit()
        count += 1
        cows, bulls= check_answer(user_input, answer)
        if cows == 4:
            break
        else:
            print('{} cow(s), {} bull(s)'.format(cows, bulls))
            
    print('Congratulations, you have won 4 cows. This took you {} guesses'.format(count))

def generate_answer():
    #use second dimention as a flag, eg. if answer is 2345, and guess is 2222, we want to have 1 cow(s) 0 bull(s) instead of 1 cow(s) and 3 bull(s)
    return [ [str(randint(0,9)), 0] for r in range(0,4)]

def get_four_digit(help_text = 'Please Enter 4 digits: '): #return a list contains 4 digit
    while True:
        try:
            four_digit = input(help_text)
        except ValueError:
            print('Ivalid input. ', end = '')
            continue
        if len(four_digit) != 4 or not four_digit.isdigit():
            print('Ivalid input. ', end = '')
            continue
        break
    return list(four_digit)

def check_answer(guess, answer):
    cows, bulls = 0, 0
    for i in range(4): #check cows first
        if [guess[i], 0] in answer:
            if guess[i] == answer[i][0]:
                answer[i][1] = 1 #set the flag
                cows += 1
                
    for i in range(4): #check bulls
        for j in range(4):
            if [guess[i], 0] == answer[j]:
                answer[j][1] = 1 #set the flag
                bulls += 1
                break
            
    for i in range(4): #reset flags
        answer[i][1] = 0

    return cows, bulls


if __name__ == "__main__":
    main()
    

